using System.Threading.Tasks;
using DotNetCqs;
using Griffin.Container;
using OneTrueError.Api.Core.Accounts.Requests;

<<<<<<< HEAD
namespace OneTrueError.AccountManagement.App.Accounts.Requests
{
    [Component]
    class ChangePasswordHandler : IRequestHandler<ChangePassword, ChangePasswordReply>
=======
namespace OneTrueError.App.Core.Accounts.Requests
{
    /// <summary>
    /// Handler for <see cref="ChangePassword"/>.
    /// </summary>
    [Component]
    public class ChangePasswordHandler : IRequestHandler<ChangePassword, ChangePasswordReply>
>>>>>>> 1f85023bc3bc0d14087f34d7c3c2906831d91915
    {
        private IAccountRepository _repository;

        public ChangePasswordHandler(IAccountRepository repository)
        {
            _repository = repository;
        }

        public async Task<ChangePasswordReply> ExecuteAsync(ChangePassword request)
        {
            var user = await _repository.GetByIdAsync(request.UserId);
<<<<<<< HEAD
            //if (!user.ValidatePassword(request.CurrentPassword))
              //  return new ChangePasswordReply() {Success = false};
=======
            if (!user.ValidatePassword(request.CurrentPassword))
                return new ChangePasswordReply() { Success = false };
>>>>>>> 1f85023bc3bc0d14087f34d7c3c2906831d91915

            user.ChangePassword(request.NewPassword);
            await _repository.UpdateAsync(user);
            return new ChangePasswordReply {Success = true};
        }
    }
}
