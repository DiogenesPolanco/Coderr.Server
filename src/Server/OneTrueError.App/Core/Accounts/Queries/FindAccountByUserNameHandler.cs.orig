using System.Threading.Tasks;
using DotNetCqs;
using Griffin.Container;
using OneTrueError.Api.Core.Accounts.Queries;

<<<<<<< HEAD
namespace OneTrueError.AccountManagement.App.Accounts.Queries
=======
namespace OneTrueError.App.Core.Accounts.Queries
>>>>>>> 1f85023bc3bc0d14087f34d7c3c2906831d91915
{
    [Component]
    public class FindAccountByUserNameHandler : IQueryHandler<FindAccountByUserName, UserInfo>
    {
        private readonly IAccountRepository _repository;

        public FindAccountByUserNameHandler(IAccountRepository repository)
        {
            _repository = repository;
        }

        public async Task<UserInfo> ExecuteAsync(FindAccountByUserName query)
        {
            var user = await _repository.FindByUsernameAsync(query.UserName);
            return user == null ? null : new UserInfo(user.Id, user.UserName);
        }
    }
}