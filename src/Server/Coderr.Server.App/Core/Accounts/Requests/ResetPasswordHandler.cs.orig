using System.Threading.Tasks;
using DotNetCqs;
using Griffin.Container;
using OneTrueError.Api.Core.Accounts.Requests;

<<<<<<< HEAD
namespace OneTrueError.AccountManagement.App.Accounts.Requests
{
=======
namespace OneTrueError.App.Core.Accounts.Requests
{
    /// <summary>
    /// Handler for <see cref="ResetPassword"/>.
    /// </summary>
>>>>>>> 1f85023bc3bc0d14087f34d7c3c2906831d91915
    [Component]
    public class ResetPasswordHandler : IRequestHandler<ResetPassword, ResetPasswordReply>
    {
        private readonly IAccountRepository _accountRepository;

        public ResetPasswordHandler(IAccountRepository accountRepository)
        {
            _accountRepository = accountRepository;
        }

        public async Task<ResetPasswordReply> ExecuteAsync(ResetPassword request)
        {
            var account = _accountRepository.FindByActivationKey(request.ActivationKey);
            account.ChangePassword(request.NewPassword);
            await _accountRepository.UpdateAsync(account);
            return new ResetPasswordReply();
        }
    }
}